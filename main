import logging
import sqlite3
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils import executor
API_TOKEN = '7650136679:AAHyk75MwIswNvijCT1LZNPp-8arH8d8g2k'  # <-- BotFather dan olingan tokenni bu yerga yozing
logging.basicConfig(level=logging.INFO)
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)
# 📁 SQLite ma'lumotlar bazasi
conn = sqlite3.connect('ptc_bot.db')
c = conn.cursor()
c.execute('''CREATE TABLE IF NOT EXISTS users (id INTEGER PRIMARY KEY, balance INTEGER DEFAULT 0)''')
c.execute('''CREATE TABLE IF NOT EXISTS ads (id INTEGER PRIMARY KEY AUTOINCREMENT, text TEXT, url TEXT, views INTEGER, max_views INTEGER)''')
c.execute('''CREATE TABLE IF NOT EXISTS views (user_id INTEGER, ad_id INTEGER)''')
conn.commit()
# 📱 Boshlang'ich menyu
def main_menu():
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add("👁 Reklama ko‘rish", "💸 Hisobim", "📤 Reklama joylash")
    return keyboard
# 🚀 /start komandasi
@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    c.execute("INSERT OR IGNORE INTO users (id) VALUES (?)", (message.from_user.id,))
    conn.commit()
    await message.answer("Assalomu alaykum! Reklama ko‘rib pul ishlang.", reply_markup=main_menu())
# 💸 Hisobni ko‘rish
@dp.message_handler(lambda m: m.text == "💸 Hisobim")
async def show_balance(message: types.Message):
    c.execute("SELECT balance FROM users WHERE id = ?", (message.from_user.id,))
    balance = c.fetchone()[0]
    await message.answer(f"Sizning hisobingizda: {balance} so‘m bor.")

# 📤 Reklama joylash (Admin uchun oddiy usul)
@dp.message_handler(lambda m: m.text == "📤 Reklama joylash")
async def handle_ad_upload(message: types.Message):
    if message.from_user.id != 998330329035:  # ADMIN_ID ni o'zgartiring
        await message.answer("Faqat admin reklama joylashi mumkin.")
        return
    await message.answer("Reklama matnini yuboring (matn | havola | maksimal ko‘rish soni):")

@dp.message_handler(lambda m: '|' in m.text and m.from_user.id == ADMIN_ID)
async def add_ad(message: types.Message):
    try:
        text, url, max_views = message.text.split('|')
        c.execute("INSERT INTO ads (text, url, views, max_views) VALUES (?, ?, 0, ?)", (text.strip(), url.strip(), int(max_views.strip())))
        conn.commit()
        await message.answer("✅ Reklama qo‘shildi!")
    except:
        await message.answer("❌ Xatolik! Formatingiz: matn | havola | maksimal ko‘rish")

# 👁 Reklama ko‘rish
@dp.message_handler(lambda m: m.text == "👁 Reklama ko‘rish")
async def watch_ads(message: types.Message):
    user_id = message.from_user.id
    c.execute("SELECT * FROM ads WHERE max_views > views")
    ads = c.fetchall()
    for ad in ads:
        ad_id, text, url, views, max_views = ad
        c.execute("SELECT * FROM views WHERE user_id = ? AND ad_id = ?", (user_id, ad_id))
        if not c.fetchone():
            # foydalanuvchi bu reklamani hali ko‘rmagan
            c.execute("INSERT INTO views (user_id, ad_id) VALUES (?, ?)", (user_id, ad_id))
            c.execute("UPDATE ads SET views = views + 1 WHERE id = ?", (ad_id,))
            c.execute("UPDATE users SET balance = balance + 50 WHERE id = ?", (user_id,))
            conn.commit()
            await message.answer(f"📢 {text}\n👉 {url}\n✅ Sizga 50 so‘m berildi!")
            return
    await message.answer("Hozircha mavjud reklama yo‘q, keyinroq urinib ko‘ring.")

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
